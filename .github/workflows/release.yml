name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*.*.*' # Matches tags like v0.4.0

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Fetch Tags
        run: git fetch --prune --unshallow --tags -f
      - name: Build Plugin
        run: ./gradlew initProject buildFlintPlugin
        env:
          GRADLE_OPTS: -Dorg.gradle.daemon=false
      - name: Build IDE
        uses: GabrielBB/xvfb-action@v1.2
        with:
          run: ./gradlew buildFlintIde
        env:
          GRADLE_OPTS: -Dorg.gradle.daemon=false
      - name: Upload Test Results
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: code/java/FlintParser/build/reports/tests/test
      - name: Get Release Logs
        id: get_release_logs
        run: |
          LOGS=$(./commitlogs.sh)
          echo "$LOGS"
          LOGS="${LOGS//'%'/'%25'}"
          LOGS="${LOGS//$'\n'/'%0A'}"
          LOGS="${LOGS//$'\r'/'%0D'}"
          echo "$LOGS"
          echo "::set-output name=logs::$LOGS"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
              ${{ steps.get_release_logs.outputs.logs }}
          draft: true
          prerelease: true
      - name: Upload Plugin
        id: upload_plugin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./code/build/artifacts/FlintPluginDistribution/Flint.zip
          asset_name: flint-plugin.zip
          asset_content_type: application/zip
      - name: Upload MacOS IDE
        id: upload_macos_ide
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./code/build/artifacts/FlintIdeDistribution/Flint.macos.zip
          asset_name: flint-macos-ide.zip
          asset_content_type: application/zip
      - name: Upload Windows IDE
        id: upload_win_ide
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./code/build/artifacts/FlintIdeDistribution/Flint.win.zip
          asset_name: flint-win-ide.zip
          asset_content_type: application/zip
      - name: Upload Linux IDE
        id: upload_linux_ide
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./code/build/artifacts/FlintIdeDistribution/Flint.tar.gz
          asset_name: flint-linux-ide.tar.gz
          asset_content_type: application/gzip
